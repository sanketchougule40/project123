package com.example.inventory;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.web.bind.annotation.*;
import java.util.*;

@SpringBootApplication
public class InventoryApplication {
    public static void main(String[] args) {
        SpringApplication.run(InventoryApplication.class, args);
    }
}

@RestController
@RequestMapping("/api/products")
class ProductController {
    private final List<Product> inventory = new ArrayList<>();

    @GetMapping
    public List<Product> getProducts() {
        return inventory;
    }

    @PostMapping
    public Product addProduct(@RequestBody Product product) {
        inventory.add(product);
        return product;
    }

    @PutMapping("/{id}")
    public Product updateStock(@PathVariable int id, @RequestBody Product updatedProduct) {
        for (Product product : inventory) {
            if (product.getId() == id) {
                product.setName(updatedProduct.getName());
                product.setQuantity(updatedProduct.getQuantity());
                return product;
            }
        }
        return null;
    }
}

class Product {
    private static int counter = 1;
    private int id;
    private String name;
    private int quantity;

    public Product() {
        this.id = counter++;
    }

    public int getId() {
        return id;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public int getQuantity() {
        return quantity;
    }

    public void setQuantity(int quantity) {
        this.quantity = quantity;
    }
}

/* README.md */
/*
# Spring Boot Inventory App

This is a simple Spring Boot-based inventory management system that allows users to:
- Add new products
- View product details
- Update stock levels

## Installation
1. Clone the repository:
   ```sh
   git clone https://github.com/your-username/spring-boot-inventory.git
   ```
2. Navigate to the project folder:
   ```sh
   cd spring-boot-inventory
   ```
3. Run the application:
   ```sh
   mvn spring-boot:run
   ```

## API Endpoints
- `GET /api/products` - Retrieve all products
- `POST /api/products` - Add a new product
- `PUT /api/products/{id}` - Update stock for a product

## License
This project is licensed under the MIT License.
*/
